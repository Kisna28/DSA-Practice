class Solution {  //this code is not pass some cases in leetcode 
    fun findMaxLength(nums: IntArray): Int {
        var maxLen = 0

        for (i in nums.indices) {
            var count0 = 0
            var count1 = 0

            for (j in i until nums.size) {
                if (nums[j] == 0) count0++
                else count1++

                if (count0 == count1) {
                    val len = j - i + 1
                    if (len > maxLen) {
                        maxLen = len
                    }
                }
            }
        }

        return maxLen
    }
}
//Better code
class Solution {
    fun findMaxLength(nums: IntArray): Int {
        val map = HashMap<Int, Int>()
        map[0] = -1
        var maxLength = 0
        var count = 0

        for (i in nums.indices) {
            count += if (nums[i] == 1) 1 else -1

            if (map.containsKey(count)) {
                maxLength = maxOf(maxLength, i - map[count]!!)
            } else {
                map[count] = i
            }
        }

        return maxLength
    
    }
}
