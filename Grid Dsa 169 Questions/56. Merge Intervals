fun main() {
   val intervals = arrayOf(intArrayOf(1,3), intArrayOf(2,6),intArrayOf(8,10),intArrayOf(15,18)) 
   
 // Step 1: Sort intervals by start time
    intervals.sortBy { it[0] }
val result = mutableListOf<IntArray>()
for(interval in intervals){
   if (result.isEmpty() || result.last()[1] < interval[0]) {
            // No overlap, add interval as it is
            result.add(interval)
        } else {
            // Overlap exists, merge intervals
            result.last()[1] = maxOf(result.last()[1], interval[1])
        }
}

 for (interval in result) {
        println("[${interval[0]}, ${interval[1]}]")
    }
}

