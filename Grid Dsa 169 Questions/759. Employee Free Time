data class Interval(val start: Int, val end: Int)

fun main() {
     // Sample input: List of List of Intervals
    val schedule = listOf(
        listOf(Interval(1, 3), Interval(6, 7)),
        listOf(Interval(2, 4)),
        listOf(Interval(2, 5), Interval(9, 12))
    )

    val result = findEmployeeFreeTime(schedule)

    println("Free Time:")
    for (interval in result) {
        println("[${interval.start}, ${interval.end}]")
    }
}

fun findEmployeeFreeTime(schedule: List<List<Interval>>): List<Interval> {
    val res = mutableListOf<Interval>()
    val intervals = mutableListOf<Interval>()

    // Flattening the schedule
    for (employee in schedule) {
        for (interval in employee) {
            intervals.add(interval)
        }
    }

    // Sorting by start time
    intervals.sortBy { it.start }

    var end = intervals[0].end

    // Finding free time between intervals
    for (i in 1 until intervals.size) {
        val interval = intervals[i]
        if (interval.start > end) {
            res.add(Interval(end, interval.start))
        }
        end = maxOf(end, interval.end)
    }

    return res
}
