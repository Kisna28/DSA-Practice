fun bubbleSort(arr:Array<Int>){  //o(n^2)
val n = arr.size
    for(i in 0 until n-1){
        for(j in 0 until n-i-1){
          if(arr[j]> arr[j+1]){
          var temp = arr[j]
          arr[j] = arr[j+1]
          arr[j+1] = temp
       } 
     }
    }
 }
fun selectionSort(arr:Array<Int>){ 
    val n = arr.size
    for(i in 0 until n-1){
         var smallest = i
        for( j in i+1 until n){
             if(arr[smallest] > arr[j]){
                 smallest  = j
                 // println("Smallest = $smallest")
             }
        }
        //swapping
        var temp = arr[smallest]
        arr[smallest] = arr[i]
        arr[i] = temp
 
    }
}
fun insertionSort(arr:Array<Int>){  //O(n^2)
  val n = arr.size
    for(i in 1 until n){
        var current = arr[i] // current value to insert
        var pre = i-1
        //finding out the correct position
        while(pre>=0 && arr[pre]> current){
            arr[pre+1] = arr[pre]
            pre--
        }
      // insert the current value into the correct position   
     arr[pre+1] = current
    }
}
fun countingSort(arr:Array<Int>){  //o(n + range of arr)
       val n = arr.size
       var largest = 0
       for(i in 0 until n){
        largest=maxOf(largest,arr[i])
    }
        // println(largest)
    //origanal array
    var count = IntArray(largest+1)
    for(i in 0 until n){
        count[arr[i]]++
    }
  //sorting(frequ array)
  var j = 0
  for(i in 0 until count.size){
      while(count[i]>0){
          arr[j]=i
          j++
          count[i]--
      }
  }
}
fun main() {
     var ar r= arrayOf(5,4,1,8,2) // 1 2 4 5 8
   //  bubbleSort(arr)
   //  selectionSort(arr)
   //  insertionSort(arr)
   countingSort(arr)
     println(arr.joinToString(", "))

}
